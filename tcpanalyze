#!/bin/bash
# A brief Pcap reader tool for fast summary output before deep dive.
# this doesn't do anything you couldn't run manually, but it's handy for me so I can just get a brief snapshot of what I'm looking at before digging in.


#resources:
#tcpdump: 
# $ tcpdump -s 0 -n -i ethX -w /tmp/$(hostname)-$(date +"%Y-%m-%d-%H-%M-%S").pcap 

# how to capture packets from inside OCP3.11 pod:
# https://access.redhat.com/solutions/3480421

# how to capture packets from inside OCP4 pod:
# https://access.redhat.com/solutions/4569211

#TCPDUMP packet capture syntax generator:
# https://access.redhat.com/labs/nptcpdump/


#=======================================
#REVISION: 7/23/24
#todo: add check that tshark exists, if not, fail
#todo - allow a 
DATE=$(date +"%Y-%m-%d-%H-%M")
LOGPATH=${DATE}_tcpanalyze_results.out

logic () {
#analysis block
echo "$(DATE)"
echo ""

#tshark -r ens3.pcap0 -Tfields -e frame.time_relative | sort -n | tail -1
#get total time of pcap:
echo "Capture timeframe by pcap" 
echo ""
for pcap in ./*.pcap* ; do echo $pcap; \
#FRAME ARRIVAL TIMES:
echo "first frame arrival time: " ; tshark -r $pcap -T fields -e frame.time | sort -n | head -1 ; echo "";\
echo "last frame arrival time: " ; tshark -r $pcap -T fields -e frame.time | sort -n | tail -1 ; echo "";\
echo "time differential in seconds: "; tshark -r $pcap -T fields -e frame.time_relative | sort -n | tail -1; echo ""; \
#BYTES IN FLIGHT:
echo "Total Rx packets observed in pcap: "; tshark -r $pcap -qz endpoints,ip | awk {'print $6'} | awk '{sum += $1} END {print sum}'; echo ""; \
echo "Total Rx Bytes observed in pcap: "; tshark -r $pcap -qz endpoints,ip | awk {'print $7'} | awk '{sum += $1} END {print sum}'; echo ""; \
echo "Total Tx packets observed in pcap: "; tshark -r $pcap -qz endpoints,ip | awk {'print $4'} | awk '{sum += $1} END {print sum}'; echo ""; \
echo "Total Tx Bytes observed in pcap: "; tshark -r $pcap -qz endpoints,ip | awk {'print $5'} | awk '{sum += $1} END {print sum}'; echo ""; \
#NONSTANDARD PACKET OBSERVATION:
echo "tcp zero-windows observed: "; tshark -r $pcap -Y "tcp.analysis.zero_window" | wc -l; echo ""; \
echo ""
#SLOW PACKETS:
echo "slow packets observed sorted by tcp.time_delta (tail -n 20):"; echo "frame   ip.src          ip.dst          tcp.time_delta  column info"; tshark -r $pcap -T fields -e frame.number -e ip.src -e ip.dst -e "tcp.time_delta" -e _ws.col.Info | sort -k4n -r | tail -n 20
echo "==========================="
echo ""
done

echo ""
echo "##############################"
echo ""

#Get unique IP's and statistics:
echo "Pulling unique IP's and statistics for each pcap:"
echo ""
echo "for pcap in ./*.pcap* ; do echo $pcap ; tshark -r $pcap -qz endpoints,ip; done"
for pcap in ./*.pcap* ; do echo $pcap ; tshark -r $pcap -qz endpoints,ip; done

echo ""
echo "##############################"
echo ""

}

#run the logic block and send errors like "this pcap was cut short in the middle of a packet"
#to /dev/null so we only get valid results we care about viewing
logic 2> /dev/null | tee $LOGPATH

